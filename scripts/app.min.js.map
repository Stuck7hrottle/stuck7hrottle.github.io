{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/app/app.ts","src/scripts/app/beehive.ts","src/scripts/app/gmaps.ts","src/scripts/app/hive.ts","src/scripts/app/map.ts","src/scripts/app/viewModel.ts","src/scripts/config.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","App","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","$","_","gmaps_ts_1","Location","latitude","longitude","latLng","google","maps","LatLng","prototype","toString","lat","lng","getLatLng","Util","getHiveRadius","steps","Math","sqrt","scanRadius","getStepsToCoverRadius","radius","ceil","getBeehiveRadius","leaps","floor","hiveOverlap","getLeapsToCoverRadius","distanceBetweenHiveCenters","hexInnerRadius","locationAdjustment","GMaps","document","foundation","Foundation","Abide","validators","$el","required","parent","accountText","val","isEmpty","accountColumns","Number","split","accounts","anyWrong","some","columns","requiredWorkers","app_ts_1","hive_ts_1","ko","Beehive","options","_this","hives","observableArray","isEditingHives","coveringRadius","activeHives","computed","getActiveHives","deferEvaluation","mapObject","Circle","fillColor","fillOpacity","strokeWeight","clickable","center","editable","draggable","zIndex","map","addMapObject","generateHives","toggleActive","addListener","getRadius","newLeaps","getCenter","getHives","console","log","reset","dispose","removeMapObject","locations","getNextPoint","p","heading","distance","adjust","nextPoint","geometry","spherical","computeOffset","push","Hive","point","lastHiveCenter","leap","se","sw","nw","ne","resize","disableActive","isActive","editHives","set","fromMap","setActiveBeehive","removeListener","filter","h","config_ts_1","load_google_maps_api_1","map_ts_1","Map","default","key","config","googleMapsKey","libraries","then","googleMaps","initMap","getMap","gmap","getElementById","zoom","mapTypeId","MapTypeId","HYBRID","mapTypeControl","input","controls","ControlPosition","TOP_CENTER","BOTTOM_CENTER","LEFT_BOTTOM","autocomplete","places","Autocomplete","bindTo","place","getPlace","setCenter","location","setZoom","event","addBeehive","addListenerOnce","observable","hexPoints","hex","Polygon","paths","Object","defineProperty","activeListener","remove","beehive_ts_1","viewModel_ts_1","beehives","activeBeehive","sliderOptions","data","end","maxSteps","initialStart","show","reInit","on","changeSteps","removeActiveHive","forEach","vm","ViewModel","applyBindings","getElementsByTagName","beehive","eventName","handler","splice","indexOf","hide","flatten","b","pogomapDirectory","os","subscribe","newValue","invalidFields","removeAttr","attr","accountsPerHive","workers","windowsTemplates","Templates","linuxTemplates","activeTemplates","getActiveTemplates","generateScriptPreview","generateScriptOutput","replace","isValid","handleFormInputValidation","handleFormValidation","name","target","existingIndex","type","isPreview","templates","preAccount","setup","value","replaceVariables","server","pogomap-directory","delay","currentAccountIndex","x","trim","accountValues","accountParams","accountParts","acc","j","auth","worker","index","auth-template","join","text","variables","forOwn","RegExp","downloadFile","script","downloadScript","filename","coordsFile","blob","Blob","url","URL","createObjectURL","style","download","href","setTimeout","revokeObjectURL","append","dispatchEvent","MouseEvent","Template","defaultValue","isDirty","defaults"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as $ from 'jquery';\r\nimport 'jquery-migrate';\r\nimport 'foundation-sites';\r\nimport * as _ from 'lodash';\r\n\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {GMaps} from './gmaps.ts';\r\n\r\nimport {config} from '../config.ts';\r\n\r\nexport class Location {\r\n  private latLng: google.maps.LatLng;\r\n\r\n  constructor(latitude: number, longitude: number) {\r\n    this.latLng = new google.maps.LatLng(latitude, longitude);\r\n  }\r\n\r\n  public toString(): string {\r\n    return `${this.latLng.lat()}, ${this.latLng.lng()}`;\r\n  }\r\n\r\n  public getLatLng(): google.maps.LatLng {\r\n    return this.latLng;\r\n  }\r\n}\r\n\r\nexport class Util {\r\n  private static scanRadius: number = 70;\r\n  public static locationAdjustment: number = Math.sqrt(3) * Util.scanRadius / 2;\r\n  public static hiveOverlap: number = (Util.scanRadius / 2) - ((Util.scanRadius - Util.locationAdjustment) * 2);\r\n\r\n  public static getHiveRadius(steps: number): number {\r\n    return ((steps - 1) * Math.sqrt(3) * this.scanRadius) + this.scanRadius;\r\n  }\r\n\r\n  public static getStepsToCoverRadius(radius: number): number {\r\n    return Math.ceil(((radius - this.scanRadius) / this.scanRadius / Math.sqrt(3)) + 1);\r\n  }\r\n\r\n  public static getBeehiveRadius(leaps: number, steps: number): number {\r\n    return Math.floor((3 * (leaps - 1) / 2) - 0.5) * (Util.getHiveRadius(steps) - Util.hiveOverlap) + Util.getHiveRadius(steps);\r\n  }\r\n\r\n  public static getLeapsToCoverRadius(radius: number, steps: number): number {\r\n    return Math.ceil((((radius - Util.getHiveRadius(steps)) / (Util.getHiveRadius(steps) - Util.hiveOverlap) + 0.5) * 2 / 3) + 1);\r\n  }\r\n  public static distanceBetweenHiveCenters(steps: number): number {\r\n    let hexInnerRadius = (steps - 1) * (3 * this.scanRadius / 2) + Util.locationAdjustment;\r\n    return (hexInnerRadius * 2 - Util.hiveOverlap);\r\n  }\r\n}\r\n\r\nexport class App {\r\n\r\n  constructor() {\r\n    let gmaps = new GMaps();\r\n    $(document).foundation();\r\n\r\n    Foundation.Abide['defaults'].validators['accountColumns'] = ($el, required, parent) => {\r\n      let accountText = $('#accounts').val();\r\n      if (!required) return true;\r\n      if (required && _.isEmpty(accountText)) {\r\n        return false;\r\n      }\r\n\r\n      let accountColumns: Number = Number($('#accountColumns').val().split(',').length);\r\n      let accounts: string[] = accountText.split('\\n');\r\n\r\n      let anyWrong = _.some(accounts, (a) => {\r\n        let columns: Number = a.split(',').length;\r\n        return accountColumns !== columns;\r\n      });\r\n\r\n      return !anyWrong;\r\n    };\r\n\r\n    Foundation.Abide['defaults'].validators['enoughAccounts'] = ($el, required, parent) => {\r\n      let requiredWorkers = Number($('#workers').val()) * Number($('#hives').val());\r\n      let accountText = $('#accounts').val();\r\n      if (_.isEmpty(accountText)) {\r\n        return false;\r\n      }\r\n\r\n      let accounts = accountText.split('\\n').length;\r\n\r\n      return accounts >= requiredWorkers;\r\n    };\r\n  }\r\n}\r\n","import {config} from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\nimport {IHiveOptions, Hive} from './hive.ts';\r\n\r\nimport * as ko from 'knockout';\r\nimport * as _ from 'lodash';\r\n\r\nexport interface IBeehiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  leaps: number;\r\n}\r\nexport class Beehive {\r\n  private options: IBeehiveOptions;\r\n  private lastHiveCenter: google.maps.LatLng;\r\n  private hives: KnockoutObservableArray<Hive>;\r\n  private mapObject: google.maps.Circle;\r\n  private isActive: boolean;\r\n  private isEditingHives: boolean;\r\n  private coveringRadius: number;\r\n  public activeHives: KnockoutComputed<Hive[]>;\r\n\r\n  constructor (options: IBeehiveOptions) {\r\n    this.options = options;\r\n    this.hives = ko.observableArray([]);\r\n    this.isEditingHives = false;\r\n    this.coveringRadius = Util.getBeehiveRadius(this.options.leaps, this.options.steps);\r\n\r\n    this.activeHives = ko.computed(() => this.getActiveHives(), this, { deferEvaluation: true });\r\n\r\n    this.mapObject = new google.maps.Circle({\r\n      radius: this.coveringRadius,\r\n      fillColor: '#0000FF',\r\n      fillOpacity: 0.0,\r\n      strokeWeight: 1,\r\n      clickable: true,\r\n      center: this.options.center.getLatLng(),\r\n      editable: true,\r\n      draggable: true,\r\n      zIndex: 3\r\n    });\r\n\r\n    this.options.map.addMapObject(this.mapObject);\r\n\r\n    this.generateHives();\r\n    this.toggleActive();\r\n\r\n    this.options.map.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n\r\n    this.options.map.addListener(this.mapObject, 'radius_changed', () => {\r\n      this.coveringRadius = this.mapObject.getRadius();\r\n\r\n      let newLeaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n      if (this.options.leaps !== newLeaps) {\r\n        this.options.leaps = newLeaps;\r\n        this.generateHives();\r\n      }\r\n\r\n    });\r\n\r\n    this.options.map.addListener(this.mapObject, 'center_changed', () => {\r\n      let center = this.mapObject.getCenter();\r\n      this.options.center = new Location(center.lat(), center.lng());\r\n      this.generateHives();\r\n    });\r\n  }\r\n\r\n  public getHives(): Hive[] {\r\n    console.log(`getting hives for ${this.options.center.toString()}`);\r\n    return this.hives();\r\n  }\r\n\r\n  public reset(dispose: boolean = false): void {\r\n    // cleanup old hives\r\n    for (let i = 0; i < this.hives().length; i++) {\r\n      this.hives()[i].reset();\r\n    }\r\n\r\n    this.hives([]);\r\n\r\n    if (dispose) {\r\n      this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Circle;\r\n    }\r\n  }\r\n\r\n  private generateHives(): Hive[] {\r\n    this.reset();\r\n\r\n    let locations: Hive[] = [];\r\n    let distanceBetweenHiveCenters = Util.distanceBetweenHiveCenters(this.options.steps);\r\n\r\n    let getNextPoint = (p, heading, distance = distanceBetweenHiveCenters, adjust = true) => {\r\n      let nextPoint = google.maps.geometry.spherical.computeOffset(p, distance, heading);\r\n      if (adjust) {\r\n        nextPoint = google.maps.geometry.spherical.computeOffset(nextPoint, Util.locationAdjustment, heading + 90);\r\n      }\r\n      locations.push(new Hive(<IHiveOptions>{ center: new Location(nextPoint.lat(), nextPoint.lng()), steps: this.options.steps, map: this.options.map }));\r\n      return nextPoint;\r\n    };\r\n\r\n    let point: google.maps.LatLng = this.options.center.getLatLng();\r\n    point = getNextPoint(point, 0, 0, false);\r\n    this.lastHiveCenter = point;\r\n\r\n    for (let leap = 2; leap <= this.options.leaps; leap++) {\r\n      point = getNextPoint(this.lastHiveCenter, 0, distanceBetweenHiveCenters);\r\n\r\n      this.lastHiveCenter = point;\r\n\r\n      for (let se = 1; se < leap; se++) {\r\n        point = getNextPoint(point, 120);\r\n      }\r\n\r\n      for (let s = 1; s < leap; s++) {\r\n        point = getNextPoint(point, 180);\r\n      }\r\n\r\n      for (let sw = 1; sw < leap; sw++) {\r\n        point = getNextPoint(point, 240);\r\n      }\r\n\r\n      for (let nw = 1; nw < leap; nw++) {\r\n        point = getNextPoint(point, 300);\r\n      }\r\n\r\n      for (let n = 1; n < leap; n++) {\r\n        point = getNextPoint(point, 0);\r\n      }\r\n\r\n      for (let ne = 2; ne < leap; ne++) {\r\n        point = getNextPoint(point, 60);\r\n      }\r\n    }\r\n\r\n    this.hives(locations);\r\n    return this.hives();\r\n  }\r\n\r\n  public resize(steps: number): void {\r\n    this.options.steps = steps;\r\n    this.options.leaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n    this.generateHives();\r\n  }\r\n\r\n  public disableActive(): void {\r\n    this.isActive = false;\r\n    if (this.isEditingHives) {\r\n      this.editHives();\r\n    }\r\n    this.mapObject.set('fillOpacity', 0);\r\n  }\r\n\r\n  public toggleActive(fromMap: boolean = false): void {\r\n    this.isActive = !this.isActive;\r\n    this.mapObject.set('fillOpacity', this.isActive ? 0.3 : 0);\r\n\r\n    this.options.map.setActiveBeehive(this.isActive ? this : null);\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.isEditingHives = !this.isEditingHives;\r\n\r\n    for (let i = 0; i < this.hives().length; i++) {\r\n      this.isEditingHives ? this.hives()[i].addListener() : this.hives()[i].removeListener();\r\n    }\r\n\r\n    this.mapObject.set('zIndex', this.isEditingHives ? 1 : 3);\r\n    this.mapObject.set('fillOpacity', this.isEditingHives ? 0 : 0.3);\r\n  }\r\n\r\n  private getActiveHives(): Hive[] {\r\n    return _.filter(this.hives(), (h) => h.isActive());\r\n  }\r\n}\r\n","import {config} from '../config.ts';\r\nimport * as $ from 'jquery';\r\nimport loadGoogleMapsApi from 'load-google-maps-api';\r\nimport {Location} from './app.ts';\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\n\r\nexport class GMaps {\r\n    private map: Map;\r\n    private gmap: google.maps.Map;\r\n\r\n    constructor() {\r\n        this.map = new Map();\r\n        loadGoogleMapsApi({\r\n            key: config.googleMapsKey,\r\n            libraries: ['places', 'geometry']\r\n        }).then((googleMaps) => {\r\n            this.initMap();\r\n        });\r\n    }\r\n\r\n    public getMap(): Map {\r\n        return this.map;\r\n    }\r\n\r\n    private initMap(): void {\r\n        this.gmap = new google.maps.Map(document.getElementById('map'), {\r\n            zoom: config.zoom,\r\n            center: new google.maps.LatLng(config.latitude, config.longitude),\r\n            mapTypeId: google.maps.MapTypeId.HYBRID,\r\n            mapTypeControl: true\r\n        });\r\n\r\n        let input = document.getElementById('pac-input') as HTMLInputElement;\r\n        this.gmap.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById('custom-map-controls'));\r\n\r\n        this.gmap.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(document.getElementById('generate-trigger'));\r\n\r\n        this.gmap.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(document.getElementById('github-buttons'));\r\n\r\n        let autocomplete = new google.maps.places.Autocomplete(input);\r\n        autocomplete.bindTo('bounds', this.gmap);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            let place = autocomplete.getPlace();\r\n            if (place.geometry) {\r\n                this.gmap.setCenter(place.geometry.location);\r\n                this.gmap.setZoom(config.zoom);\r\n            }\r\n        });\r\n\r\n        this.gmap.addListener('click', (event: google.maps.MouseEvent) => {\r\n            this.map.addBeehive(new Location(event.latLng.lat(), event.latLng.lng()));\r\n        });\r\n\r\n        google.maps.event.addListenerOnce(this.gmap, 'idle', () => {\r\n            this.map.initMap(<IMapOptions>{ gmap: this.gmap });\r\n        });\r\n    }\r\n}\r\n","import {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\n\r\nimport * as ko from 'knockout';\r\n\r\nexport interface IHiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  index: number;\r\n}\r\nexport class Hive {\r\n  private options: IHiveOptions;\r\n  private mapObject: google.maps.Polygon;\r\n  public isActive: KnockoutObservable<boolean>;\r\n  private activeListener: google.maps.MapsEventListener;\r\n\r\n  get steps(): number {\r\n    return this.options.steps;\r\n  }\r\n\r\n  constructor(options: IHiveOptions) {\r\n    this.options = options;\r\n    this.isActive = ko.observable(false);\r\n\r\n    let center = this.options.center.getLatLng();\r\n    let radius = Util.getHiveRadius(this.options.steps);\r\n\r\n    let computeOffset = google.maps.geometry.spherical.computeOffset;\r\n\r\n    let hexPoints: google.maps.LatLng[] = [\r\n      computeOffset(center, radius, 30),\r\n      computeOffset(center, radius, 90),\r\n      computeOffset(center, radius, 150),\r\n      computeOffset(center, radius, 210),\r\n      computeOffset(center, radius, 270),\r\n      computeOffset(center, radius, 330)\r\n    ];\r\n\r\n    let hex = new google.maps.Polygon({\r\n      paths: hexPoints,\r\n      fillOpacity: 0.3,\r\n      strokeWeight: 1,\r\n      zIndex: 2,\r\n    });\r\n\r\n    this.mapObject = hex;\r\n    this.toggleActive();\r\n    this.options.map.addMapObject(hex);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Polygon;\r\n  }\r\n\r\n  public toggleActive(): void {\r\n    this.isActive(!this.isActive());\r\n    this.mapObject.set('fillColor', this.isActive() ? '#0F0' : '#F00');\r\n  }\r\n\r\n  public addListener(): void {\r\n    this.activeListener = google.maps.event.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n  }\r\n\r\n  public removeListener(): void {\r\n    this.activeListener.remove();\r\n  }\r\n\r\n  public getCenter(): Location {\r\n    return this.options.center;\r\n  }\r\n}\r\n","import {config} from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\nimport * as $ from 'jquery';\r\nimport {ViewModel} from './viewModel.ts';\r\nimport {Hive} from './hive.ts';\r\n\r\nimport * as ko from 'knockout';\r\nimport * as _ from 'lodash';\r\n\r\nexport interface IMapOptions {\r\n  gmap: google.maps.Map;\r\n}\r\n\r\nexport class Map {\r\n  private options: IMapOptions;\r\n  private beehives: KnockoutObservableArray<Beehive>;\r\n  private activeBeehive: Beehive;\r\n  private isEditingHives: boolean;\r\n  private steps: number;\r\n  public activeHives: KnockoutComputed<Hive[]>;\r\n\r\n  constructor () {\r\n    this.beehives = ko.observableArray([]);\r\n    this.activeBeehive = null;\r\n\r\n    this.steps = config.steps;\r\n\r\n    this.activeHives = ko.computed(() => this.getActiveHives());\r\n  }\r\n\r\n  public initMap(options: IMapOptions): void {\r\n    this.options = options;\r\n    let sliderOptions = $('#beehive-control .slider').data('zfPlugin').options;\r\n    sliderOptions.end = config.maxSteps;\r\n    sliderOptions.initialStart = config.steps;\r\n\r\n    $('#custom-map-controls').show();\r\n    $('#github-buttons').show();\r\n    Foundation.reInit(['slider']);\r\n\r\n    $('#beehive-control .slider').on('moved.zf.slider', (e) => this.changeSteps(e));\r\n    $('#remove').on('click', () => this.removeActiveHive());\r\n    $('#edit-hives').on('click', () => this.editHives());\r\n    $('#generate-ui-wrapper').on('open.zf.reveal', () => {\r\n      _.forEach($('input,select,textarea', '#generate-ui'), (e) => $('#generate-ui').foundation('validateInput', $(e)));\r\n    });\r\n    let vm = new ViewModel({map: this});\r\n    ko.applyBindings(vm, document.getElementsByTagName('body')[0]);\r\n  }\r\n\r\n  public addBeehive(location: Location): void {\r\n    let beehive = new Beehive(<IBeehiveOptions>{ map: this, steps: this.steps, leaps: config.leaps, center: location });\r\n    this.beehives.push(beehive);\r\n    $('#generate-trigger').show();\r\n  }\r\n\r\n  public addMapObject(mapObject: google.maps.MVCObject): void {\r\n      mapObject.set('map', this.options.gmap);\r\n  }\r\n\r\n  public removeMapObject(mapObject: google.maps.MVCObject): google.maps.MVCObject {\r\n      mapObject.set('map', null);\r\n      mapObject = null;\r\n      return mapObject;\r\n  }\r\n\r\n  public addListener(mapObject: google.maps.MVCObject, eventName: string, handler: (...args: any[]) => void): void {\r\n    google.maps.event.addListener(mapObject, eventName, handler);\r\n  }\r\n\r\n  private changeSteps(event: JQueryEventObject): void {\r\n    this.steps = Number($('#steps').val());\r\n\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.resize(this.steps);\r\n    }\r\n  }\r\n  private removeActiveHive(): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.reset(true);\r\n      this.beehives.splice(this.beehives.indexOf(this.activeBeehive), 1);\r\n      this.activeBeehive = null;\r\n      $('#remove').hide();\r\n\r\n      if (this.beehives().length === 0) {\r\n        $('#generate-trigger').hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  public setActiveBeehive(beehive: Beehive): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.disableActive();\r\n    }\r\n    if (beehive !== null) {\r\n      $('#remove').show();\r\n      $('#edit-hives').show();\r\n    } else {\r\n      $('#remove').hide();\r\n      $('#edit-hives').hide();\r\n    }\r\n    this.activeBeehive = beehive;\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.activeBeehive.editHives();\r\n  }\r\n\r\n  private getActiveHives(): Hive[] {\r\n    return _.flatten(_.map(this.beehives(), (b) => b.activeHives()));\r\n  }\r\n}\r\n","import {Map} from './map.ts';\r\nimport {Hive} from './hive.ts';\r\nimport {ICommandTemplate, config} from '../config.ts';\r\n\r\nimport * as $ from 'jquery';\r\nimport * as ko from 'knockout';\r\nimport * as _ from 'lodash';\r\n\r\nexport interface IViewModelOptions {\r\n    map: Map;\r\n}\r\nexport class ViewModel {\r\n    private options: IViewModelOptions;\r\n    public activeHives: KnockoutObservable<Hive[]>;\r\n    public os: KnockoutObservable<string>;\r\n    public accountsPerHive: KnockoutObservable<number>;\r\n    public accountColumns: KnockoutObservable<string>;\r\n    public accounts: KnockoutObservable<string>;\r\n    public pogomapDirectory: KnockoutObservable<string>;\r\n    public filename: KnockoutObservable<string>;\r\n\r\n    private windowsTemplates: Templates;\r\n    private linuxTemplates: Templates;\r\n\r\n    public activeTemplates: KnockoutObservable<Templates>;\r\n    public generateScriptPreview: KnockoutComputed<string>;\r\n\r\n    private invalidFields: KnockoutObservableArray<string>;\r\n    private isValid: KnockoutComputed<boolean>;\r\n\r\n    constructor(options: IViewModelOptions) {\r\n        this.options = options;\r\n        this.activeHives = ko.computed(() => this.getActiveHives());\r\n        this.pogomapDirectory = ko.observable('');\r\n\r\n        this.os = ko.observable(config.os);\r\n        this.os.subscribe((newValue) => {\r\n            this.invalidFields([]);\r\n\r\n            if (this.os() === 'windows') {\r\n                $('#pogomap-directory').removeAttr('data-abide-ignore');\r\n            }\r\n            else {\r\n                $('#pogomap-directory').attr('data-abide-ignore', '');\r\n            }\r\n\r\n            _.forEach($('input,select,textarea', '#generate-ui'), (e) => $('#generate-ui').foundation('validateInput', $(e)));\r\n        });\r\n        this.accountsPerHive = ko.observable(config.workers);\r\n        this.accountColumns = ko.observable(config.accountColumns);\r\n        this.accountColumns.subscribe((newValue) => $('#generate-ui').foundation('validateInput', $('#accounts')));\r\n        this.accounts = ko.observable('');\r\n\r\n        this.windowsTemplates = new Templates(config.windowsTemplates);\r\n        this.linuxTemplates = new Templates(config.linuxTemplates);\r\n        this.activeTemplates = ko.computed(() => this.getActiveTemplates());\r\n\r\n        this.generateScriptPreview = ko.computed(() => this.generateScriptOutput(true).replace(/\\n/g, '<br />'));\r\n\r\n        this.invalidFields = ko.observableArray([]);\r\n        this.isValid = ko.computed(() => this.invalidFields().length === 0);\r\n        this.isValid.subscribe((newValue) => {\r\n            newValue ? $('#download').show() : $('#download').hide();\r\n        });\r\n\r\n        $(document).on('valid.zf.abide invalid.zf.abide', ((e) => this.handleFormInputValidation(e)));\r\n        $(document).on('formvalid.zf.abide forminvalid.zf.abide', ((e) => this.handleFormValidation(e)));\r\n    }\r\n\r\n    private handleFormInputValidation(e: JQueryEventObject): void {\r\n        let name = $(e.target).attr('name');\r\n        let existingIndex = this.invalidFields.indexOf(name);\r\n        if (e.type === 'valid') {\r\n            if (existingIndex >= 0) {\r\n                this.invalidFields.splice(existingIndex, 1);\r\n            }\r\n        }\r\n        else {\r\n            if (existingIndex < 0) {\r\n                this.invalidFields.push(name);\r\n            }\r\n        }\r\n    }\r\n    private handleFormValidation(e: JQueryEventObject): void {\r\n        if (e.type === 'valid') {\r\n            this.invalidFields([]);\r\n        }\r\n    }\r\n\r\n    private getActiveHives(): Hive[] {\r\n        return this.options.map.activeHives();\r\n    }\r\n\r\n    private getActiveTemplates(): Templates {\r\n        return this.os() === 'windows' ? this.windowsTemplates : this.linuxTemplates;\r\n    }\r\n\r\n    public generateScriptOutput(isPreview: boolean = true): string {\r\n        let templates = this.activeTemplates();\r\n        let hives = this.activeHives();\r\n        let accounts = this.accounts().split('\\n');\r\n        if (hives.length <= 0) { return ''; }\r\n\r\n        let preAccount = `\r\n${templates.setup.value()}\r\n${this.replaceVariables(templates.server.value(), { \r\n    'pogomap-directory': this.pogomapDirectory(),\r\n    location: hives[0].getCenter().toString() \r\n})}\r\n${templates.delay.value()}\r\n        `;\r\n        let workers = '';\r\n        let currentAccountIndex = 0;\r\n        let accountColumns = _.map(this.accountColumns().split(','), (x) => _.trim(x));\r\n\r\n        for (let i = 0; i < (isPreview ? 1 : hives.length); i++) {\r\n            let accountValues = [];\r\n\r\n            for (let a = 0; a < this.accountsPerHive(); a++) {\r\n                let accountParams: any = {};\r\n                if (accounts.length > currentAccountIndex) {\r\n                    let accountParts = _.map(accounts[currentAccountIndex].split(','), (acc) => _.trim(acc));\r\n                    for (let j = 0; j < accountColumns.length; j++) {\r\n                        accountParams[accountColumns[j]] = accountParts[j];\r\n                    }\r\n                }\r\n                currentAccountIndex++;\r\n                accountValues.push(this.replaceVariables(templates.auth.value(), accountParams));\r\n            }\r\n            workers += `\r\n${this.replaceVariables(templates.worker.value(), { \r\n    'pogomap-directory': this.pogomapDirectory(),\r\n    index: i + 1,\r\n    location: hives[i].getCenter().toString(), \r\n    steps: hives[i].steps,\r\n    'auth-template': _.join(accountValues, ' ') \r\n})}\r\n${templates.delay.value()}\r\n            `;\r\n        }\r\n\r\n        return preAccount + workers;\r\n    }\r\n\r\n    private replaceVariables(text: string, variables: any): string {\r\n        _.forOwn(variables, (value, key) => text = text.replace(new RegExp(`{${key}}`, 'g'), value));\r\n\r\n        return text;\r\n    }\r\n\r\n    public downloadFile (): void {\r\n        let script = this.generateScriptOutput(false);\r\n        this.downloadScript(script, this.activeTemplates().filename.value());\r\n    }\r\n\r\n    public coordsFile (): void {\r\n        let script = _.join(_.map(this.activeHives(), (h) => h.getCenter().toString()), '\\n');\r\n\r\n        this.downloadScript(script, 'coords.txt');\r\n    }\r\n\r\n    public downloadScript(script: string, filename: string): void {\r\n        let blob = new Blob([script], { type: 'text/plain' });\r\n        let url = window.URL.createObjectURL(blob);\r\n        let a = $('<a>', { style: 'display: none;', download: filename, href: url });\r\n\r\n        a.on('click', () => {\r\n            setTimeout(() => {\r\n                window.URL.revokeObjectURL(url);\r\n                a.remove();\r\n            }, 50);\r\n        });\r\n\r\n        $('#generate-ui').append(a);\r\n        a[0].dispatchEvent(new MouseEvent('click'));\r\n    }\r\n}\r\n\r\nexport class Template {\r\n    public value: KnockoutObservable<string>;\r\n    public isDirty: KnockoutObservable<boolean>;\r\n\r\n    constructor(public defaultValue: string) {\r\n        this.value = ko.observable(defaultValue);\r\n        this.isDirty = ko.observable(false);\r\n\r\n        this.value.subscribe((newValue) => this.isDirty(true));\r\n    }\r\n}\r\n\r\nexport class Templates {\r\n  public setup: Template;\r\n  public server: Template;\r\n  public worker: Template;\r\n  public auth: Template;\r\n  public delay: Template;\r\n  public filename: Template;\r\n\r\n  constructor(defaults: ICommandTemplate) {\r\n      this.setup = new Template(defaults.setup);\r\n      this.server = new Template(defaults.server);\r\n      this.worker = new Template(defaults.worker);\r\n      this.auth = new Template(defaults.auth);\r\n      this.delay = new Template(defaults.delay);\r\n      this.filename = new Template(defaults.filename);\r\n  }\r\n}\r\n","export class config {\r\n  public static googleMapsKey: string = 'AIzaSyD-e8302g9ooyV7-hl4eWA3tKtqZJBImGg';\r\n  public static latitude: number = 40.8258;\r\n  public static longitude: number = -96.6852;\r\n  public static zoom: number = 12;\r\n  public static leaps: number = 4;\r\n  public static steps: number = 10;\r\n  public static maxSteps: number = 100;\r\n\r\n  public static os: string = 'windows';\r\n  public static workers: number = 4;\r\n  public static accountColumns: string = 'username, password';\r\n\r\n  public static windowsTemplates: ICommandTemplate = {\r\n    setup: 'taskkill /IM python.exe /F',\r\n    server: 'Start \"Server\" /d {pogomap-directory} /MIN python.exe runserver.py -os -l \"{location}\"',\r\n    worker: 'Start \"Worker{index}\" /d {pogomap-directory} /MIN python.exe runserver.py -ns -l \"{location}\" -st {steps} {auth-template}',\r\n    auth: '-u {username} -p \"{password}\"',\r\n    delay: 'ping 127.0.0.1 -n 6 > null',\r\n    filename: 'launch.bat'\r\n  };\r\n\r\n  public static linuxTemplates: ICommandTemplate = {\r\n    setup: '#!/usr/bin/env bash',\r\n    server: 'nohup python runserver.py -os -l \\'{location}\\' &',\r\n    worker: 'nohup python runserver.py -ns -l \\'{location}\\' -st {steps} {auth-template} &',\r\n    auth: '-u {username} -p \\'{password}\\'',\r\n    delay: 'sleep 0.5;',\r\n    filename: 'launch.sh'\r\n  };\r\n};\r\n\r\nexport interface ICommandTemplate {\r\n  setup: string;\r\n  server: string;\r\n  worker: string;\r\n  auth: string;\r\n  delay: string;\r\n  filename: string;\r\n}\r\n"],"sourceRoot":"/source/"}